input {
	file {
		path => "/usr/share/logstash/pipeline/jp-companies/*.xml"
		start_position => "beginning"
		sincedb_path => "/dev/null"
    exclude => "*.gz"
    type => "xml"
    codec => multiline {
        pattern => "<corporation>" 
        negate => "true"
        what => "previous"
    }
  }
}

filter {
    xml {
        source => "message"
        store_xml => false
        force_array => false
        target => "doc"
        xpath => [
            "/corporation/sequenceNumber/text()", "sequenceNumber",
            "/corporation/process/text()", "process",
            "/corporation/correct/text()", "correct",
            "/corporation/updateDate/text()", "updateDate",
            "/corporation/changeDate/text()", "changeDate",
            "/corporation/corporateNumber/text()", "corporateNumber",
            "/corporation/name/text()", "name",
            "/corporation/nameImageId/text()", "nameImageId",
            "/corporation/kind/text()", "kind",
            "/corporation/prefectureName/text()", "prefectureName",
            "/corporation/cityName/text()", "cityName",
            "/corporation/streetNumber/text()", "streetNumber",
            "/corporation/addressImageId/text()", "addressImageId",
            "/corporation/prefectureCode/text()", "prefectureCode",
            "/corporation/cityCode/text()", "cityCode",
            "/corporation/postCode/text()", "postCode",
            "/corporation/addressOutside/text()", "addressOutside",
            "/corporation/closeDate/text()", "closeDate",
            "/corporation/closeCause/text()", "closeCause",
            "/corporation/successorCorporateNumber/text()", "successorCorporateNumber",
            "/corporation/changeCause/text()", "changeCause",
            "/corporation/assignmentDate/text()", "assignmentDate",
            "/corporation/latest/text()", "latest",
            "/corporation/enName/text()", "enName",
            "/corporation/enPrefectureName/text()", "enPrefectureName",
            "/corporation/enCityName/text()", "enCityName",
            "/corporation/enAddressOutside/text()", "enAddressOutside",
            "/corporation/furigana/text()", "furigana",
            "/corporation/hihyoji/text()", "hihyoji"
        ]
    }

    mutate {
      remove_field => ["path", "host","@timestamp","@version","message","tags","type"]
    }
}

## Add your filters / logstash plugins configuration here

output {
	elasticsearch {
		hosts => "elasticsearch:9200"
		user => "elastic"
		password => "changeme"
		index => "companies"
		document_id => "%{corporateNumber}"
	}
	stdout {codec => rubydebug}
}
